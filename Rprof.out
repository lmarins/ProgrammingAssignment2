sample.interval=20000
"eval" "eval" "model.frame.default" "stats::model.frame" "eval" "eval" "lm" 
"which" ".local" "asJSON" "asJSON" ".local" "FUN" "FUN" "vapply" ".local" "FUN" "FUN" "vapply" ".local" "FUN" "FUN" "vapply" ".local" "asJSON" "asJSON" "jsonlite::toJSON" "jsonlite::write_json" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "cb" 
"sub" "mysub" "trimws" "scalar" "FUN" "lapply" "inspect_env" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "cb" 
"match.arg" "trimws" "scalar" "FUN" "lapply" "inspect_env" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "cb" 
"match.arg" "trimws" "scalar" "FUN" "lapply" "inspect_env" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "cb" 
"scalar" "FUN" "lapply" "inspect_env" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "cb" 
"any" ".local" "asJSON" "asJSON" ".local" "FUN" "FUN" "vapply" ".local" "FUN" "FUN" "vapply" ".local" "FUN" "FUN" "vapply" ".local" "asJSON" "asJSON" "jsonlite::toJSON" "jsonlite::write_json" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "cb" 
"sub" "prettyNum" "format.default" "format" "format.fun" "paste" "nchar.w" "maybe_truncate" "formObj" "cat" "str.default" "utils::str" "...elt" "withVisible" "utils::capture.output" "paste0" "capture_str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try_capture_str" "FUN" "lapply" "inspect_env" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "cb" 
".local" "asJSON" "asJSON" ".local" "FUN" "FUN" "vapply" ".local" "FUN" "FUN" "vapply" ".local" "FUN" "FUN" "vapply" ".local" "asJSON" "asJSON" "jsonlite::toJSON" "jsonlite::write_json" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "cb" 
"%in%" "str.default" "utils::str" "...elt" "withVisible" "utils::capture.output" "paste0" "capture_str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try_capture_str" "FUN" "lapply" "inspect_env" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "cb" 
".local" "FUN" "FUN" "vapply" ".local" "FUN" "FUN" "vapply" ".local" "FUN" "FUN" "vapply" ".local" "asJSON" "asJSON" "jsonlite::toJSON" "jsonlite::write_json" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "cb" 
"sub" "mysub" "trimws" "scalar" "FUN" "lapply" "inspect_env" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "cb" 
"match.arg" "sink" "utils::capture.output" "paste0" "capture_str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try_capture_str" "FUN" "lapply" "inspect_env" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "cb" 
"collapse_object" ".local" "FUN" "FUN" "vapply" ".local" "asJSON" "asJSON" "jsonlite::toJSON" "jsonlite::write_json" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "cb" 
"sub" "mysub" "trimws" "scalar" "FUN" "lapply" "inspect_env" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "cb" 
"solve.default" "solve" "cacheSolve" 
"mayCallBrowserList" "mayCallBrowser" "cmpfun" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "compiler:::tryCmpfun" "makeCacheMatrix" 
"%in%" "modifyList" "str.default" "utils::str" "...elt" "withVisible" "utils::capture.output" "paste0" "capture_str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try_capture_str" "FUN" "lapply" "inspect_env" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "cb" 
".local" "FUN" "FUN" "vapply" ".local" "FUN" "FUN" "vapply" ".local" "FUN" "FUN" "vapply" ".local" "asJSON" "asJSON" "jsonlite::toJSON" "jsonlite::write_json" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "cb" 
"collapse" ".local" "FUN" "FUN" "vapply" ".local" "FUN" "FUN" "vapply" ".local" "FUN" "FUN" "vapply" ".local" "asJSON" "asJSON" "jsonlite::toJSON" "jsonlite::write_json" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "cb" 
"sub" "mysub" "trimws" "scalar" "FUN" "lapply" "inspect_env" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "cb" 
"prettyNum" "format.default" "format" "format.fun" "paste" "nchar.w" "maybe_truncate" "formObj" "cat" "str.default" "utils::str" "...elt" "withVisible" "utils::capture.output" "paste0" "capture_str" "doTryCatch" "tryCatchOne" "tryCatchList" "tryCatch" "try_capture_str" "FUN" "lapply" "